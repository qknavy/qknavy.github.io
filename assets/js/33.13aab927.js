(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{545:function(v,_,p){"use strict";p.r(_);var e=p(4),t=Object(e.a)({},(function(){var v=this,_=v.$createElement,p=v._self._c||_;return p("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[p("p",[v._v("一、初识MySQL体系结构")]),v._v(" "),p("p",[v._v("二、理解MySQL底层B+tree索引机制")]),v._v(" "),p("p",[v._v("1、索引是谁实现的")]),v._v(" "),p("p",[v._v("索引引擎是插拔式的，由MySQL定义规范，第三方实现的插件形式")]),v._v(" "),p("p",[v._v("2、索引的定义")]),v._v(" "),p("p",[v._v("3、为什么MySQL要选择B+tree")]),v._v(" "),p("p",[v._v("平衡二叉树太深了（树的高度太高了）、太小了（一个磁盘块存放的内容太小了。不能合理运用好磁盘单页4k的容量，mysql定义的单页容量就是16k），而且不能“预加载“的预读能力。")]),v._v(" "),p("p",[v._v("B+tree多路平衡查找树")]),v._v(" "),p("p",[v._v("4、两大引擎")]),v._v(" "),p("p",[v._v("5、索引知识补充")]),v._v(" "),p("p",[v._v("如果查询列可通过索引节点中的关键字直接返回，则该索引称之为覆盖索引")]),v._v(" "),p("p",[v._v("覆盖索引可减少数据库IO，将所及IO变为顺序IO，可提高查询性能")]),v._v(" "),p("p",[v._v("索引的数据长度能少则少")]),v._v(" "),p("p",[v._v("索引一定不是越多越好，越全越好，一定是建合适的")]),v._v(" "),p("p",[v._v("匹配列前缀可用到索引like百分号不能放在开始")]),v._v(" "),p("p",[v._v("where条件中not in 和 <>操作无法使用索引")]),v._v(" "),p("p",[v._v("匹配范围值，order by也可用到索引")]),v._v(" "),p("p",[v._v("多用指定列查询，只返回自己想要的数据列，好用select *")]),v._v(" "),p("p",[v._v("联合索引中如果不是按照索引最左列开始查找，无法使用索引")]),v._v(" "),p("p",[v._v("联合索引中精确匹配最左前列并范围匹配另外一列可用到索引")]),v._v(" "),p("p",[v._v("联合索引中，如果查询中有某个咧的范围查询，则其右边的所有列都无法使用索引")]),v._v(" "),p("p",[v._v("6、总结")])])}),[],!1,null,null,null);_.default=t.exports}}]);