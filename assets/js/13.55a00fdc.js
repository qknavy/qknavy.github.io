(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{525:function(v,_,l){"use strict";l.r(_);var s=l(4),t=Object(s.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("p",[v._v("JDK=tools+jre（libs+jvm）")]),v._v(" "),l("p",[v._v("java文件--\x3ejavac--\x3eclass文件--\x3e类加载--\x3eJVM")]),v._v(" "),l("p",[l("strong",[v._v("类加载机制：")])]),v._v(" "),l("p",[v._v("1、类装载")]),v._v(" "),l("ul",[l("li",[v._v("先找到类文件所在的路径（类装载器，ClassLoader，双亲委派模式）")]),v._v(" "),l("li",[v._v("类文件信息告诉JVM，将内文件字节码流静态存储结构放到jvm的某一个区域（方法区）")]),v._v(" "),l("li",[v._v("类文件对应的类对象Class对象（堆heap）")])]),v._v(" "),l("p",[v._v("2、链接")]),v._v(" "),l("ul",[l("li",[v._v("验证：保证加载的类的正确性")]),v._v(" "),l("li",[v._v("准备：要为类的静态变量分配内存空间，并将其值初始化为默认值")]),v._v(" "),l("li",[v._v("解析：将类中的符号引用转化为直接应用")])]),v._v(" "),l("p",[v._v("3、初始化")]),v._v(" "),l("p",[v._v("为静态变量初始化，赋值为真正的初始值")]),v._v(" "),l("p",[v._v("4、使用")]),v._v(" "),l("p",[v._v("5、卸载")]),v._v(" "),l("p",[l("strong",[v._v("运行时数据区")])]),v._v(" "),l("ul",[l("li",[v._v("程序计数器")]),v._v(" "),l("li",[v._v("堆")])]),v._v(" "),l("p",[v._v("class对象或者数组，生命周期和虚拟机一样，也会OOM")]),v._v(" "),l("ul",[l("li",[v._v("java虚拟机找")])]),v._v(" "),l("p",[v._v("线程独享，如果栈深度不够用，会出现StackOverFlow")]),v._v(" "),l("p",[v._v("栈针：局部变量、操作数栈、动态链接、方法返回")]),v._v(" "),l("ul",[l("li",[v._v("本地方法栈")]),v._v(" "),l("li",[v._v("方法区")])]),v._v(" "),l("p",[v._v("存储的是类信息、常量、静态变量、即时编译器编译之后的代码（逻辑上属于堆的一部分），也会引起oom")])])}),[],!1,null,null,null);_.default=t.exports}}]);